!function(t){var n={};function e(o){if(n[o])return n[o].exports;var i=n[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,e),i.l=!0,i.exports}e.m=t,e.c=n,e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e.w={},e(e.s=0)}([function(t,n,e){"use strict";e.r(n);const o={};function i(){return o}const a=!0;const r={database:"base",user:"postgres",password:"12345",host:"localhost",port:5432};function s(t,n,e,o){const s=new(i().pg.Client)({user:r.user,host:r.host,database:r.database,password:r.password,port:r.port});s.connect(),!0===a&&(console.log("   "),console.log(t),console.log("----------------------------------------")),s.query(t,n,(t,n)=>{s.end(),t?o():e(n.rows)})}function c(t,n,e){const o=[];t.on("data",t=>{o.push(t.toString())}).on("end",()=>{const t=o.join("");try{const o=JSON.parse(t.toString());e(o)}catch(t){n.end(JSON.stringify({result:"JSON_ERROR"}))}})}function d(t){t.get("/api/database/clear",function(t,n){!function(t,n){s(i().fs.readFileSync("main.sql","utf8").toString(),[],()=>{n.end(JSON.stringify({result:"INIT_DATABASE_OK"}))},()=>{throw new Error})}(0,n)}),t.get("/api/database/:table/select",function(t,n){!function(t,n){const e=t.params.table.toString();s(" SELECT * FROM "+e+" ORDER BY "+e+"_id DESC; ",[],t=>{n.end(JSON.stringify(t))},()=>{n.end(JSON.stringify({result:"TABLE_NOT_FOUND"}))})}(t,n)}),t.post("/api/database/country/add",function(t,n){!function(t,n){c(t,n,t=>{s("INSERT INTO country (country_name) VALUES ($1) RETURNING *; ",[t.country_name],t=>{const e=t[0];n.end(JSON.stringify(e))},()=>{n.end(JSON.stringify({result:"COUNTRY_ALREADY_EXISTS"}))})})}(t,n)}),t.post("/api/database/city/add",function(t,n){!function(t,n){c(t,n,t=>{s("INSERT INTO city (city_name, city_country_id) VALUES($1, $2) RETURNING *; ",[t.city_name,parseInt(t.city_country_id)],t=>{const e=t[0];n.end(JSON.stringify(e))},()=>{n.end(JSON.stringify({result:"COUNTRY_NOT_FOUND"}))})})}(t,n)}),t.post("/api/database/airport/add",function(t,n){!function(t,n){c(t,n,t=>{s("INSERT INTO airport (airport_name, airport_city_id) VALUES ($1, $2) RETURNING *; ",[t.airport_name,parseInt(t.airport_city_id)],t=>{const e=t[0];n.end(JSON.stringify(e))},()=>{n.end(JSON.stringify({result:"CITY_NOT_FOUND"}))})})}(t,n)}),t.post("/api/database/man/add",function(t,n){!function(t,n){c(t,n,t=>{s("INSERT INTO man (man_fullname, man_city) VALUES ($1, $2) RETURNING *; ",[t.man_fullname,parseInt(t.man_city)],t=>{const e=t[0];n.end(JSON.stringify(e))},()=>{n.end(JSON.stringify({result:"CITY_NOT_FOUND"}))})})}(t,n)}),t.post("/api/database/ticket/add",function(t,n){!function(t,n){c(t,n,t=>{s("INSERT INTO ticket (ticket_airport_a, ticket_airport_b, ticket_date, ticket_man_id) VALUES ($1, $2, NOW(), $3) RETURNING *; ",[parseInt(t.ticket_airport_a),parseInt(t.ticket_airport_b),parseInt(t.ticket_man_id)],t=>{const e=t[0];n.end(JSON.stringify(e))},()=>{n.end(JSON.stringify({result:"AIRPORT_OR_MAN_NOT_FOUND"}))})})}(t,n)}),t.get("/api/database/man/:id/get",function(t,n){!function(t,n){const e=t.params.id.toString();s("SELECT * FROM man INNER JOIN city ON (man_city = city_id) INNER JOIN country ON (city_country_id = country_id) WHERE man_id = $1 LIMIT 1; ",[parseInt(e)],t=>{n.end(JSON.stringify(t))},()=>{n.end(JSON.stringify({result:"DATABASE_ERROR"}))})}(t,n)})}const l="http://localhost:5007/";function u(t,n,e){const o=i().fs;let a=`<!doctype html>\n        <html>\n        <head>\n            <style>\n                .fieldClass {\n                    margin-left: 15px;\n                    padding: 7px;\n                    width: 300px;\n                }\n            </style>\n            <meta charset="UTF-8" />\n            <title>${t}</title>\n        </head>\n        <body>\n        <h1>${t}</h1>`;a+=`<form id = "myForm" action = ${l+e} method = 'POST'>`;for(let t=0;t<n.length;t++)a+=`<p>${n[t]}</p>`,a+=`<input type = "text" class = "fieldClass" spellcheck = "false" autocomplete = "off" id = ${n[t]}>`,a+="<br>";a+='<br><input type = "button" value = "Send" id = "mainBtn">',a+="</form>",a+="<script src = './code.js'><\/script>",a+="</body>\n        </html>",o.writeFile("./static/"+t+".html",a,function(n){console.log("Create ./static/"+t+".html OK")})}const p=5007;!function(){let t=e(3)(),n=e(2);i().pg=n;let o=e(1);i().fs=o,t.use(function(t,n,e){n.header("Cache-Control","no-cache, no-store, must-revalidate"),n.header("Access-Control-Allow-Origin","*"),n.header("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),e()});const a=parseInt(p);t.listen(a),console.log("    "),console.log("Server port: "+a),console.log("-----------------------------------"),console.log("    "),u("addCountry",["country_name"],"api/database/country/add"),u("addCity",["city_name","city_country_id"],"api/database/city/add"),u("addAirport",["airport_name","airport_city_id"],"api/database/airport/add"),u("addMan",["man_fullname","man_city"],"api/database/man/add"),u("addTicket",["ticket_airport_a","ticket_airport_b","ticket_man_id"],"api/database/ticket/add"),d(t)}(),setTimeout(function(){console.log("    "),console.log("-----------------------------------"),console.log("    "),console.log("System is ready to work ..."),console.log("    ")},4e3)},function(t,n){t.exports=require("fs")},function(t,n){t.exports=require("pg")},function(t,n){t.exports=require("express")}]);